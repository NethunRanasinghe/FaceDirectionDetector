<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABjNwkAYzgJBF8yCQ9ZKwkRWSsJEVkrCRFZKwkRWSsJEVkrCRFZKwkRWSsJEVkr
        CRFeMwgRXTIIEVkrCRFZKwkRWSsJEVkrCRFZKwkRWSsJEVkrCRFZKwkRWSsJEV8zCQ9kOQkDZDgJAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGM4CABjNwhCZj4HtGtHB7trRwe6a0cHumtHB7prRwe6a0cHumtH
        B7prRwe6a0cHumc/CLpnQAi6a0cHumtHB7prRwe6a0cHumtHB7prRwe6a0cHumtHB7prRwe7Zj4HtGM3
        CEJjOAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYzgIAGAzCGiEbgX8srsC/7O9Av+zvQL/s70C/7O9
        Av+zvQL/s70C/7O9Av+zvQL/h3QF/45/Bf+0vwL/s70C/7O9Av+zvQL/s70C/7O9Av+zvQL/s70C/7K7
        Av+EbgX8YDMIaGM4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjOAgAXzEIZpGDBfzQ7gD/0vEA/9Lx
        AP/S8QD/0vEA/9LxAP/S8QD/0vEA/9LxAP+ViwT/npoE/9T0AP/S8QD/0vEA/9LxAP/S8QD/0vEA/9Lx
        AP/S8QD/0O4A/5GDBfxfMQhmYzgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGM4CABfMQhmkIIF/M/s
        AP/R7wD/0e8A/9HvAP/R7wD/0e8A/9HvAP/R7wD/0e8A/5SKBP+emQT/0/IA/9HvAP/R7wD/0e8A/9Hv
        AP/R7wD/0e8A/9HvAP/P7AD/kIIF/F8xCGZjOAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYzgIAF8x
        CGSPgQX7z+wA/9HvAP/R7wD/0e8A/9HvAP/R7wD/0e8A/9HvAP/R7wD/lIoE/56ZBP/T8gD/0e8A/9Hv
        AP/R7wD/0e8A/9HvAP/R7wD/0e8A/8/rAP+PgAX7XzEIY2M4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AE/xwAAP8eAAj/HwAY/wPAQP8D/8D/A//A8=
</value>
  </data>
</root>